package Venueresources;

public class Seats 
{
	private boolean reserved; //Field variables
	private int seatxposition;
	private int seatyposition;
	private int seatid;
	private double seatscore;
	
	public int getSeatId() 
	{
		return this.seatid;
	}
	public void setSeatid(int seatid) {
		this.seatid = seatid;
	}
	Seats(boolean reservedstatus,int xposition,int yposition, int newseatid) //Default Constructor 
	{
		seatid = newseatid;
		reserved=reservedstatus;
		seatxposition=xposition;
		seatyposition=yposition;	
	}
	public  void calculateScore()
	{
		double distance = Math.hypot((double)this.seatxposition-3,(double)this.seatyposition-5);
		this.seatscore=distance;
	}
	public boolean getreserved() //Getters 
	{
		return this.reserved;
	}
	public int getxposition()
	{
		return this.seatxposition;
	}
	public int getyposition()
	{
		return this.seatyposition;
	}
	public double getSeatScore() 
	{
		// TODO Auto-generated method stub
		return this.seatscore;
	}
	//Setters
	public void setreserved(boolean newreservation)
	{
		this.reserved= newreservation;
	}
	public void setxposition(int newxposition)
	{
		this.seatxposition= newxposition;
	}
	public void setyxposition(int newyposition)
	{
		this.seatyposition=newyposition; 	
	}
	public void setseatid(int x)
	{
		this.seatid = x;
	}
	
	public boolean reserveseat(Venue VenueForNumbers) //Function to book a seat in the theater 
	{
		if(this.reserved==false)
		{
			this.setreserved(true);
			VenueForNumbers.setNumberofseats(VenueForNumbers.getNumberOfSeats()-1);
			return true;
		}
		else
		{
			System.out.println("The seat is not currently available");
			return false;
		}
	}
	
	public boolean unreserveseat(Venue VenueForNumbers)
	{
		if(this.reserved==true)
		{
			this.setreserved(false);
			VenueForNumbers.setNumberofseats(VenueForNumbers.getNumberOfSeats()+1);
			return true;
		}
		else
		{
			System.out.println("Seat is already not reserved ");
			return false;
		}
	}

	
	

}
